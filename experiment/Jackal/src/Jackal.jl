module Jackal

using TrajectoryGamesExamples:
    planar_double_integrator,
    PolygonEnvironment,
    two_player_meta_tag,
    create_environment_axis,
    visualize_players!,
    visualize_obstacle_bounds!
using Sockets: Sockets
using ProgressMeter: ProgressMeter
using Makie
using GLMakie
using LinearAlgebra: LinearAlgebra, I, norm, normalize
using JSON: JSON
using LazySets: LazySets
using OptiTrack: OptiTrack, OptiTrackConnection
using Rotations: RotXZY, QuatRotation
using Colors: @colorant_str
using StatsBase: StatsBase, sample
using Statistics: mean, std
using Flux: Flux, Optimise
using Combinatorics: permutations
using ThreadsX: ThreadsX
using InfiniteArrays: âˆž
using BenchmarkTools
using MCPGameSolver: MCPGameSolver, MCPCoupledOptimizationSolver, WarmStartRecedingHorizonStrategy
using PATHSolver: PATHSolver
using TrajectoryGamesBase: TrajectoryGamesBase, TrajectoryGame, rollout, AbstractDynamics,
                GeneralSumCostStructure, ProductDynamics, TrajectoryGame, TrajectoryGameCost,
                JointStrategy, 
                state_dim, control_dim, num_players, get_constraints, state_bounds, control_bounds
using LiftedTrajectoryGames: LiftedTrajectoryStrategy
using TrajectoryGamesExamples: TrajectoryGamesExamples, PolygonEnvironment, planar_double_integrator,
                visualize_players!, create_environment_axis
using DifferentiableTrajectoryOptimization: DifferentiableTrajectoryOptimization, ParametricTrajectoryOptimizationProblem, 
                MCPSolver, Optimizer, get_constraints_from_box_bounds
using BlockArrays: Block, BlockVector, mortar, blocksizes, blocksize, blocks
using Zygote: Zygote
using Random: Random, shuffle!
using ForwardDiff: ForwardDiff
using LinearAlgebra: norm_sqr, norm

"""
This package contains hardware experiment code for our work: https://arxiv.org/abs/2211.13779
Most infrastructure in this package has been generated by: https://github.com/schmidma, who provided
a demonstration of how to control the Jackal UGV with OptiTrack state estimation directly from Julia.
"""

include("communication/optitrack.jl")
include("communication/robot.jl")
include("control/control.jl")
include("utils/game.jl")
include("run.jl")
include("utils/solve.jl")
include("utils/shared_state.jl")
include("utils/visualize.jl")
include("utils/utils.jl")

end
